#!/usr/bin/env python3
#
# Create the gallery html page from the list of images found in img/
# using the database data.csv
#

from datetime import date
from typing import Any, TextIO
import csv
import html
import os
import subprocess

# The built-in '.capitalize()' method will downcase the rest of the string,
# which we don't want.
def capitalize(s: str) -> str:
    if len(s) > 0:
        return s[0].upper() + s[1:]
    else:
        return s

def generate(row_reader: Any, md_file: TextIO) -> None:
    md_file.write(
        """% Artwork by Martin Jambon
<!-- generated by './build' -->

<p>
[<img src="img/other/instagram-logo.png" style="height:1.5em;padding:0em 0.5em">](https://www.instagram.com/martinjambon/)
[<img src="img/other/twitter-logo.png" style="height:1.5em;padding:0em 0.5em">](https://twitter.com/mjambon)
[<img src="img/other/facebook-logo.png" style="height:1.5em;padding:0em 0.5em">](https://facebook.com/0xfff)
</p>
"""
    )
    for row in row_reader:
        img_id = row['identifier']
        year = date.fromisoformat(row['date']).year
        title = capitalize(row['title'])
        if not title:
            title = 'Untitled'
        img_name = img_id + '.jpg'

        # Generate images of different sizes
        orig = 'img/original/' + img_name

        large = 'img/large/' + img_name
        if not os.path.isfile(large):
            subprocess.run(["convert", "-resize", "1600x1600", orig, large])

        medium = 'img/medium/' + img_name
        if not os.path.isfile(medium):
            subprocess.run(["convert", "-resize", "800x800", orig, medium])

        # Write to main page
        caption = f"""{title}, {year}"""
        md_file.write(
            f'[<img src="{html.escape(medium)}" '
            f'title="{html.escape(title)}" '
            f'style="padding:40px 0px 0px 0px" '
            f'alt="abstract art"/>]({html.escape(large)})'
            f'\n'
            f'<p style="color:#666">{html.escape(caption)}</p>\n'
        )

def main() -> None:
    os.makedirs('img/large', exist_ok=True)
    os.makedirs('img/medium', exist_ok=True)
    with open('data.csv', 'r') as csvfile:
        row_reader = csv.DictReader(csvfile)
        with open('index.md', 'w') as mdfile:
            generate(row_reader, mdfile)

main()
